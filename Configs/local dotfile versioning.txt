Local dotfile versioning in ~  or $HOME

I use:

    git init --bare $HOME/.myconf
    alias lcfg='git --git-dir=$HOME/.myconf/ --work-tree=$HOME'
    lcfg config status.showUntrackedFiles no

where my ~/.myconf directory is a git bare repository. Then any file within the home folder can be versioned with normal commands like:

    config status
    config add .vimrc
    config commit -m "Add vimrc"
    config add .config/redshift.conf
    config commit -m "Add redshift config"
    config push    <++++++ this does not work because the epo has no upstream

And so oneâ€¦

No extra tooling, no symlinks, files are tracked on a version control system, you can use different branches for different computers, you can replicate you configuration easily on new installation.

cd ~/.myconf
gitk

or can use tortoise there